.data
prompt1:
.asciz "Unesite niz:\n"
prompt2:
.asciz "Sortiran niz:\n"
elementi:
.asciz " "
.text
.global _start
_start:
mov r7,#4
mov r0,#1
ldr r1,=prompt1
mov r2,#13 @broj karaktera prve recenice
swi #0
mov r7,#3
mov r0,#0
ldr r1,=elementi
mov r2,#10 @niz ce nam imati 15 elemenata
swi #0
mov r0, #10
loop1:
ldr r5, addr1 @uzmi adresu prvog elementa
add r6, r5, #1 @u r6 ide adresa prvo elementa uvecena za 1
8
mov r3, #14 @za niz od 15 elemenata vrsimo 14 poreÄ‘enja
loop2:
ldrb r1, [r5]
ldrb r2, [r6]
cmp r1, r2
blo loop3 @branch lower, ako je r1 < r2, predji na loop3
mov r4, r2 @ako nije ispunjen uslov, znaci da je prvi clan niz veci od drugog pa im zamijeni mjesta
mov r2, r1
mov r1, r4
loop3:
strb r1, [r5] @u ovom dijelu na adrese gdje pokazuju r5 i r6 pohranjujemo vrijednosti r1 i r2 respektivo
strb r2, [r6]
add r5, r5, #1 @inkrementiramo r5 i r6
add r6, r6, #1
subs r3, r3, #1 @smanjujemo vrijednost brojaca petlje za 1
bne loop2 @vrati se na loop2 ako nije r3 postalo 0
subs r0, r0, #1
bne loop1 @vrati se na loop1 ako r0 nije postalo 0
mov r7,#4 @od ovog dijela je standardni kod koji sluzi za ispis
mov r0,#1
ldr r1,=prompt2
mov r2,#15
swi #0
mov r7,#4
mov r0,#1
ldr r1,=elementi
9
mov r2,#15
swi #0
addr1: .word elementi
mov r7,#1
swi #0
.end